"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.realtimeUpdateParser = realtimeUpdateParser;
var _enums = require("../enums");
var _ReadLap = _interopRequireDefault(require("../lib/ReadLap"));
var _ReadString = _interopRequireDefault(require("../lib/ReadString"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function realtimeUpdateParser(reader) {
  const result = {};
  result.EventIndex = reader.ReadUInt16();
  result.SessionIndex = reader.ReadUInt16();
  result.SessionType = new _enums.RaceSessionType()[reader.ReadBytes(1).readUInt8(0).toString()];
  result.Phase = new _enums.SessionPhase()[reader.ReadBytes(1).readUInt8(0).toString()];
  result.SessionTime = reader.ReadFloat();
  result.SessionEndTime = reader.ReadFloat();
  result.FocusedCarIndex = reader.ReadInt32();
  result.ActiveCameraSet = (0, _ReadString.default)(reader);
  result.ActiveCamera = (0, _ReadString.default)(reader);
  result.CurrentHudPage = (0, _ReadString.default)(reader);
  result.IsReplayPlaying = reader.ReadBytes(1).readUInt8(0) > 0;
  if (result.IsReplayPlaying) {
    result.ReplaySessionTime = reader.ReadFloat();
    result.ReplayRemainingTime = reader.ReadFloat();
  }
  result.TimeOfDay = reader.ReadFloat();
  result.AmbientTemp = reader.ReadBytes(1).readUInt8(0);
  result.TrackTemp = reader.ReadBytes(1).readUInt8(0);
  result.Clouds = reader.ReadBytes(1).readUInt8(0) / 10;
  result.RainLevel = reader.ReadBytes(1).readUInt8(0) / 10;
  result.Wetness = reader.ReadBytes(1).readUInt8(0) / 10;
  result.BestSessionLap = (0, _ReadLap.default)(reader);
  return result;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZW51bXMiLCJyZXF1aXJlIiwiX1JlYWRMYXAiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX1JlYWRTdHJpbmciLCJlIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJyZWFsdGltZVVwZGF0ZVBhcnNlciIsInJlYWRlciIsInJlc3VsdCIsIkV2ZW50SW5kZXgiLCJSZWFkVUludDE2IiwiU2Vzc2lvbkluZGV4IiwiU2Vzc2lvblR5cGUiLCJSYWNlU2Vzc2lvblR5cGUiLCJSZWFkQnl0ZXMiLCJyZWFkVUludDgiLCJ0b1N0cmluZyIsIlBoYXNlIiwiU2Vzc2lvblBoYXNlIiwiU2Vzc2lvblRpbWUiLCJSZWFkRmxvYXQiLCJTZXNzaW9uRW5kVGltZSIsIkZvY3VzZWRDYXJJbmRleCIsIlJlYWRJbnQzMiIsIkFjdGl2ZUNhbWVyYVNldCIsIlJlYWRTdHJpbmciLCJBY3RpdmVDYW1lcmEiLCJDdXJyZW50SHVkUGFnZSIsIklzUmVwbGF5UGxheWluZyIsIlJlcGxheVNlc3Npb25UaW1lIiwiUmVwbGF5UmVtYWluaW5nVGltZSIsIlRpbWVPZkRheSIsIkFtYmllbnRUZW1wIiwiVHJhY2tUZW1wIiwiQ2xvdWRzIiwiUmFpbkxldmVsIiwiV2V0bmVzcyIsIkJlc3RTZXNzaW9uTGFwIiwiUmVhZExhcCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHJ1Y3RzL1JlYWx0aW1lVXBkYXRlUGFyc2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJhY2VTZXNzaW9uVHlwZSwgU2Vzc2lvblBoYXNlIH0gZnJvbSBcIkAvZW51bXNcIjtcclxuaW1wb3J0IFJlYWRMYXAgZnJvbSBcIkAvbGliL1JlYWRMYXBcIjtcclxuaW1wb3J0IFJlYWRTdHJpbmcgZnJvbSBcIkAvbGliL1JlYWRTdHJpbmdcIjtcclxuaW1wb3J0IHsgUmVhbHRpbWVVcGRhdGUgfSBmcm9tIFwiQC90eXBlc1wiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlYWx0aW1lVXBkYXRlUGFyc2VyKHJlYWRlcikge1xyXG4gIGNvbnN0IHJlc3VsdDogUGFydGlhbDxSZWFsdGltZVVwZGF0ZT4gPSB7fTtcclxuXHJcbiAgcmVzdWx0LkV2ZW50SW5kZXggPSByZWFkZXIuUmVhZFVJbnQxNigpO1xyXG4gIHJlc3VsdC5TZXNzaW9uSW5kZXggPSByZWFkZXIuUmVhZFVJbnQxNigpO1xyXG4gIHJlc3VsdC5TZXNzaW9uVHlwZSA9IG5ldyBSYWNlU2Vzc2lvblR5cGUoKVtcclxuICAgIHJlYWRlci5SZWFkQnl0ZXMoMSkucmVhZFVJbnQ4KDApLnRvU3RyaW5nKClcclxuICBdO1xyXG4gIHJlc3VsdC5QaGFzZSA9IG5ldyBTZXNzaW9uUGhhc2UoKVtcclxuICAgIHJlYWRlci5SZWFkQnl0ZXMoMSkucmVhZFVJbnQ4KDApLnRvU3RyaW5nKClcclxuICBdO1xyXG4gIHJlc3VsdC5TZXNzaW9uVGltZSA9IHJlYWRlci5SZWFkRmxvYXQoKTtcclxuICByZXN1bHQuU2Vzc2lvbkVuZFRpbWUgPSByZWFkZXIuUmVhZEZsb2F0KCk7XHJcblxyXG4gIHJlc3VsdC5Gb2N1c2VkQ2FySW5kZXggPSByZWFkZXIuUmVhZEludDMyKCk7XHJcbiAgcmVzdWx0LkFjdGl2ZUNhbWVyYVNldCA9IFJlYWRTdHJpbmcocmVhZGVyKTtcclxuICByZXN1bHQuQWN0aXZlQ2FtZXJhID0gUmVhZFN0cmluZyhyZWFkZXIpO1xyXG4gIHJlc3VsdC5DdXJyZW50SHVkUGFnZSA9IFJlYWRTdHJpbmcocmVhZGVyKTtcclxuXHJcbiAgcmVzdWx0LklzUmVwbGF5UGxheWluZyA9IHJlYWRlci5SZWFkQnl0ZXMoMSkucmVhZFVJbnQ4KDApID4gMDtcclxuXHJcbiAgaWYgKHJlc3VsdC5Jc1JlcGxheVBsYXlpbmcpIHtcclxuICAgIHJlc3VsdC5SZXBsYXlTZXNzaW9uVGltZSA9IHJlYWRlci5SZWFkRmxvYXQoKTtcclxuICAgIHJlc3VsdC5SZXBsYXlSZW1haW5pbmdUaW1lID0gcmVhZGVyLlJlYWRGbG9hdCgpO1xyXG4gIH1cclxuXHJcbiAgcmVzdWx0LlRpbWVPZkRheSA9IHJlYWRlci5SZWFkRmxvYXQoKTtcclxuICByZXN1bHQuQW1iaWVudFRlbXAgPSByZWFkZXIuUmVhZEJ5dGVzKDEpLnJlYWRVSW50OCgwKTtcclxuICByZXN1bHQuVHJhY2tUZW1wID0gcmVhZGVyLlJlYWRCeXRlcygxKS5yZWFkVUludDgoMCk7XHJcbiAgcmVzdWx0LkNsb3VkcyA9IHJlYWRlci5SZWFkQnl0ZXMoMSkucmVhZFVJbnQ4KDApIC8gMTA7XHJcbiAgcmVzdWx0LlJhaW5MZXZlbCA9IHJlYWRlci5SZWFkQnl0ZXMoMSkucmVhZFVJbnQ4KDApIC8gMTA7XHJcbiAgcmVzdWx0LldldG5lc3MgPSByZWFkZXIuUmVhZEJ5dGVzKDEpLnJlYWRVSW50OCgwKSAvIDEwO1xyXG5cclxuICByZXN1bHQuQmVzdFNlc3Npb25MYXAgPSBSZWFkTGFwKHJlYWRlcik7XHJcblxyXG4gIHJldHVybiByZXN1bHQgYXMgUmVhbHRpbWVVcGRhdGU7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxRQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxXQUFBLEdBQUFELHNCQUFBLENBQUFGLE9BQUE7QUFBMEMsU0FBQUUsdUJBQUFFLENBQUEsV0FBQUEsQ0FBQSxJQUFBQSxDQUFBLENBQUFDLFVBQUEsR0FBQUQsQ0FBQSxLQUFBRSxPQUFBLEVBQUFGLENBQUE7QUFHbkMsU0FBU0csb0JBQW9CQSxDQUFDQyxNQUFNLEVBQUU7RUFDM0MsTUFBTUMsTUFBK0IsR0FBRyxDQUFDLENBQUM7RUFFMUNBLE1BQU0sQ0FBQ0MsVUFBVSxHQUFHRixNQUFNLENBQUNHLFVBQVUsQ0FBQyxDQUFDO0VBQ3ZDRixNQUFNLENBQUNHLFlBQVksR0FBR0osTUFBTSxDQUFDRyxVQUFVLENBQUMsQ0FBQztFQUN6Q0YsTUFBTSxDQUFDSSxXQUFXLEdBQUcsSUFBSUMsc0JBQWUsQ0FBQyxDQUFDLENBQ3hDTixNQUFNLENBQUNPLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQyxDQUM1QztFQUNEUixNQUFNLENBQUNTLEtBQUssR0FBRyxJQUFJQyxtQkFBWSxDQUFDLENBQUMsQ0FDL0JYLE1BQU0sQ0FBQ08sU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDLENBQzVDO0VBQ0RSLE1BQU0sQ0FBQ1csV0FBVyxHQUFHWixNQUFNLENBQUNhLFNBQVMsQ0FBQyxDQUFDO0VBQ3ZDWixNQUFNLENBQUNhLGNBQWMsR0FBR2QsTUFBTSxDQUFDYSxTQUFTLENBQUMsQ0FBQztFQUUxQ1osTUFBTSxDQUFDYyxlQUFlLEdBQUdmLE1BQU0sQ0FBQ2dCLFNBQVMsQ0FBQyxDQUFDO0VBQzNDZixNQUFNLENBQUNnQixlQUFlLEdBQUcsSUFBQUMsbUJBQVUsRUFBQ2xCLE1BQU0sQ0FBQztFQUMzQ0MsTUFBTSxDQUFDa0IsWUFBWSxHQUFHLElBQUFELG1CQUFVLEVBQUNsQixNQUFNLENBQUM7RUFDeENDLE1BQU0sQ0FBQ21CLGNBQWMsR0FBRyxJQUFBRixtQkFBVSxFQUFDbEIsTUFBTSxDQUFDO0VBRTFDQyxNQUFNLENBQUNvQixlQUFlLEdBQUdyQixNQUFNLENBQUNPLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7RUFFN0QsSUFBSVAsTUFBTSxDQUFDb0IsZUFBZSxFQUFFO0lBQzFCcEIsTUFBTSxDQUFDcUIsaUJBQWlCLEdBQUd0QixNQUFNLENBQUNhLFNBQVMsQ0FBQyxDQUFDO0lBQzdDWixNQUFNLENBQUNzQixtQkFBbUIsR0FBR3ZCLE1BQU0sQ0FBQ2EsU0FBUyxDQUFDLENBQUM7RUFDakQ7RUFFQVosTUFBTSxDQUFDdUIsU0FBUyxHQUFHeEIsTUFBTSxDQUFDYSxTQUFTLENBQUMsQ0FBQztFQUNyQ1osTUFBTSxDQUFDd0IsV0FBVyxHQUFHekIsTUFBTSxDQUFDTyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUNDLFNBQVMsQ0FBQyxDQUFDLENBQUM7RUFDckRQLE1BQU0sQ0FBQ3lCLFNBQVMsR0FBRzFCLE1BQU0sQ0FBQ08sU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0VBQ25EUCxNQUFNLENBQUMwQixNQUFNLEdBQUczQixNQUFNLENBQUNPLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7RUFDckRQLE1BQU0sQ0FBQzJCLFNBQVMsR0FBRzVCLE1BQU0sQ0FBQ08sU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtFQUN4RFAsTUFBTSxDQUFDNEIsT0FBTyxHQUFHN0IsTUFBTSxDQUFDTyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUNDLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFO0VBRXREUCxNQUFNLENBQUM2QixjQUFjLEdBQUcsSUFBQUMsZ0JBQU8sRUFBQy9CLE1BQU0sQ0FBQztFQUV2QyxPQUFPQyxNQUFNO0FBQ2YiLCJpZ25vcmVMaXN0IjpbXX0=